# .github/workflows/fetch_arxiv.yml
name: Fetch Daily arXiv Papers

permissions:
  contents: write
  
on:
  schedule:
    - cron: '0 0 * * *'  # 每天午夜 (UTC) 运行
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install arxiv

    - name: Run Python script
      run: |
        # python arxiv_daily_fetcher.py >> content/basics/first_content.md
        echo aaa >> content/basics/first_content.md

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: "0.123.8"
        extended: true

    # - name: Set up Node.js
    #   uses: actions/setup-node@v2
    #   with:
    #     node-version: '14'

    # - name: Install Hugo
    #   run: |
    #     npm install -g hugo
    #     hugo version

    # - name: Build the site
    #   run: |
    #     mkdir -p public
    #     cd $GITHUB_WORKSPACE
    #     echo $PWD
    #     ls
    #     hugo -v

    # - name: Deploy to GitHub Pages
    #   uses: peaceiris/actions-gh-pages@v3
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     publish_dir: ./public
        # force_push: true

    - name: Build
      run: hugo --minify

    - name: git_pull
      run: |
        git pull

    - name: Add and commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "Github Action"
        git add content/basics/first_content.md
        git add public/*
        git commit -m "Update arXiv papers list"

    - name: Push changes
      id: git_push
      run: |
        # Pull first
        # git pull # --rebase origin "${GITHUB_REF}"
        # Push after
        git push origin "${GITHUB_REF}"
        ls /home/runner/work/github-base/
        ls /home/runner/work/github-base/github-base
        echo 'current dir:' $PWD ${GITHUB_REF}

    - name: GitHub Pages
    # You may pin to the exact commit or the version.
    # uses: crazy-max/ghaction-github-pages@c05ee637ec73429400a359430db8e5629f3f2564
      uses: crazy-max/ghaction-github-pages@v4.0.0
      with:
      # # Git domain (default github.com)
      # domain: # optional, default is github.com
      # # GitHub repository where assets will be deployed (default $GITHUB_REPOSITORY)
      # repo: # optional
      # # Git branch where assets will be deployed
      # target_branch: # optional, default is gh-pages
      # # Create incremental commit instead of doing push force
      # keep_history: # optional, default is false
      # # Allow an empty commit to be created
      # allow_empty_commit: # optional, default is true
      # # Build directory to deploy
        build_dir: ./public
      # # Whether to treat build_dir as an absolute path
      # absolute_build_dir: # optional, default is false
      # # If enabled, the content of symbolic links will be copied
      # follow_symlinks: # optional, default is false
      # # The committer name and email address
      # committer: # optional
      # # The author name and email address
      # author: # optional
      # # Commit message
      # commit_message: # optional
      # # Write the given domain name to the CNAME file
      # fqdn: # optional
      # # Allow Jekyll to build your site
      # jekyll: # optional, default is true
      # # If enabled, nothing will be pushed
      # dry_run: # optional, default is false
      # # Enable verbose output
        verbose: true # optional, default is false
          

  # - name: Deploy
  #   uses: peaceiris/actions-gh-pages@v3
  #   if: github.ref == 'refs/heads/main'
  #   with:
  #     github_token: ${{ secrets.GITHUB_TOKEN }}
  #     publish_dir: ./public
